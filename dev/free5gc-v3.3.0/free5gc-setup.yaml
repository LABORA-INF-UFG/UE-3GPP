---
    -   hosts: fee5gc
        become: yes
        remote_user: root
        vars:
            GTP5G_DIR_INSTALL : "/root/gtp5g"
            GTP5G_BRANCH_VERSION : "v0.8.3" 
            FREE5GC_DIR_INSTALL : "/root/go/src/free5gc"
            UPF_DIR_CONFIG : "/root/go/src/free5gc/NFs/upf/build/config"
            WEB_CONSOLE_FRONTEND_DIR : "/root/go/src/free5gc/webconsole/frontend"
            WEB_CONSOLE_BASE_DIR : "/root/go/src/free5gc/webconsole"
            NFS_DIR_CONFIG : "/root/go/src/free5gc/config"
            UPF_DIR : "/root/go/src/free5gc/NFs/upf"
            NRF_DIR : "/root/go/src/free5gc/NFs/nrf"
            UDR_DIR : "/root/go/src/free5gc/NFs/udr"
            UDM_DIR : "/root/go/src/free5gc/NFs/udm"
            AUSF_DIR : "/root/go/src/free5gc/NFs/ausf"
            NSSF_DIR : "/root/go/src/free5gc/NFs/nssf"
            AMF_DIR : "/root/go/src/free5gc/NFs/amf"
            PCF_DIR : "/root/go/src/free5gc/NFs/pcf"
            SMF_DIR : "/root/go/src/free5gc/NFs/smf"
            N3IWF_DIR : "/root/go/src/free5gc/NFs/n3iwf" 
            GO_SRC_DIR : "/root/go/src"
            HOME_DIR: "/root"
            CLASSLESS_INTER_DOMAIN_ROUTING_IPV4_POOL_OF_UE : "60.60.0.0"
            FREE5GC_GIT_CHECKOUT_URL_FREEGC_TAG_VERSION: "--recursive -b v3.3.0 -j `nproc` https://github.com/free5gc/free5gc.git"
            LABORA_UE_NON3GPP_GIT_REPO: "https://github.com/LABORA-INF-UFG/UE-non3GPP.git"
            FREE5GC_CHECKOUT_FOLDER_NAME: "free5gc"
            PREDEFINED_IP_ADDRESS: "false"
            MONGO_URL_CONNECTION: "mongodb://127.0.0.1:27017"
            NRF_IP_ADDRESS: "127.0.0.10"
            MASCARA_REDE_DECIMAL: "19"
            NRF_PORT: "8000"
            UDR_IP_ADDRESS: "127.0.0.4"
            UDR_PORT: "8000"
            UDM_IP_ADDRESS: "127.0.0.3"
            UDM_PORT: "8000"
            AUSF_IP_ADDRESS: "127.0.0.9"
            AUSF_PORT: "8000"
            NSSF_IP_ADDRESS: "127.0.0.31"
            NSSF_PORT: "8000"
            AMF_NGAP_IP_ADDRESS: "127.0.0.1"
            AMF_IP_ADDRESS: "127.0.0.18"
            AMF_PORT: "8000"
            PCF_IP_ADDRESS: "127.0.0.7"
            PCF_PORT: "8000"
            SMF_N3_INTERFACE_IP_ADDRESS: "127.0.0.1"
            SMF_N4_INTERFACE_IP_ADDRESS: "127.0.0.1"
            SMF_IP_ADDRESS: "127.0.0.2"
            SMF_PORT: "8000"
            UPF_IP_ADDRESS: "127.0.0.8"
            GTPU_UPF_IP_ADDRESS: "127.0.0.8"
            N3IWF_AMF_SCTP_PORT: "38412"
            N3IWF_IKE_BIND_ADDRESS: "127.0.0.21"
            N3IWF_IP_SEC_INTERFACE_ADDRESS: "10.0.0.1"
            N3IWF_UE_IP_ADDRESS_RANGE: "10.0.0.0"
            N3IWF_IP_SEC_INTERFACE_MARK: "5"
            N3IWF_NAS_TCP_PORT: "20000"
            N3IWF_IPSEC_INTERFACE_NAME: "ipsec0"
            N3IWF_IPSEC_INTERFACE_XFRM_MARK: "5"
            MCC: "208"
            MNC: "93"
            
        tasks:

            - set_fact:
                AMF_NGAP_IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
                N3IWF_IKE_BIND_ADDRESS: "{{ ansible_default_ipv4.address }}"
                SMF_N3_INTERFACE_IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
                SMF_N4_INTERFACE_IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
                GTPU_UPF_IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
              when: PREDEFINED_IP_ADDRESS == 'false'

            - set_fact:
                MASCARA_REDE_DECIMAL: "20"
              when: ansible_default_ipv4.netmask == '255.255.240.0'

            - set_fact:
                MASCARA_REDE_DECIMAL: "24"
              when: ansible_default_ipv4.netmask == '255.255.255.0'

            - set_fact:
                MASCARA_REDE_DECIMAL: "32"
              when: ansible_default_ipv4.netmask == '255.255.255.255'

            - name: Verify that required internet_network_interface variable are defined
              fail:
                msg: "Variable 'internet_network_interface' needs to be set for the role to work"
              when: internet_network_interface is undefined

            - name: "Ansible | Print a Variables"
              debug:
                  msg: "Network Mask: {{ MASCARA_REDE_DECIMAL }}"

            - name: Upgrade all apt packages
              apt: upgrade=dist force_apt_get=yes

            - name: Install Basic requirements - core
              apt:
                    name: ['mongodb', 'wget', 'git', 'ca-certificates', 'net-tools', 'gcc', 'cmake', 'autoconf', 'build-essential', 'libtool', 'pkg-config', 'libmnl-dev', 'libyaml-dev']
                    state: present
                    update_cache: yes

            - name: Start Mongo-DB
              shell:  sudo systemctl start mongodb
              
            - name: Remove GTP5G (if exists)
              shell:  sudo rm -rf {{ GTP5G_DIR_INSTALL }}
              ignore_errors: true
              
            - name: Remove free5GC dir (if exists)
              shell:  sudo rm -rf {{ FREE5GC_DIR_INSTALL }}
              ignore_errors: true

            - name  : Git Clone GTP5
              shell : git clone -b {{ GTP5G_BRANCH_VERSION   }} https://github.com/free5gc/gtp5g.git
              args:
                chdir: "{{ HOME_DIR }}"

            - name  : Run 'Make' into GTP5G
              shell : make
              args:
                chdir: "{{ GTP5G_DIR_INSTALL }}"

            - name  : Install GTP5G
              shell : sudo make install
              args:
                chdir: "{{ GTP5G_DIR_INSTALL }}"
              ignore_errors: true

            - name  : Network Setting 1/4
              shell : sudo sysctl -w net.ipv4.ip_forward=1
              
            - name  : Network Setting 2/4
              shell : sudo iptables -t nat -A POSTROUTING -o {{ internet_network_interface }} -j MASQUERADE

            - name  : Network Setting with set Maximum Segment Size into UPF out 3/4
              shell : sudo iptables -A FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1400

            - name  : Network Setting 4/4
              shell : sudo systemctl stop ufw

            - name  : Remove Free5gc old dir if exist
              shell : rm -rf {{ FREE5GC_CHECKOUT_FOLDER_NAME }}
              args:
                chdir: "{{ GO_SRC_DIR }}"
              ignore_errors: true

            - name  : Git Clone by free5gc TAG Version
              shell : git clone {{ FREE5GC_GIT_CHECKOUT_URL_FREEGC_TAG_VERSION }} {{ FREE5GC_CHECKOUT_FOLDER_NAME }}
              args:
                chdir: "{{ GO_SRC_DIR }}"

            - name  : Create NRF cert dir
              shell : |
                mkdir config
                mkdir cert
              args:
                chdir: "{{ NRF_DIR }}"

            - name  : Copy NRF cert's 1/2
              shell: cp {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/cert/nrf.pem {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/NFs/nrf/cert/nrf.pem

            - name  : Copy NRF cert's 2/2
              shell: cp {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/cert/nrf.key {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/NFs/nrf/cert/nrf.key

            - name  : Build nrfcfg.yaml config file - inside NFs/nrf dir (debug mode)
              copy:
                dest: "{{ NRF_DIR }}/config/nrfcfg.yaml"
                content: |
                  info:
                    version: 1.0.2
                    description: NRF initial local configuration

                  configuration:
                    MongoDBName: free5gc # database name in MongoDB
                    MongoDBUrl: {{ MONGO_URL_CONNECTION }} # a valid URL of the mongodb
                    sbi: # Service-based interface information
                      scheme: http # the protocol for sbi (http or https)
                      registerIPv4: {{ NRF_IP_ADDRESS }} # IP used to serve NFs or register to another NRF
                      bindingIPv4: {{ NRF_IP_ADDRESS }}  # IP used to bind the service
                      port: {{ NRF_PORT }} # port used to bind the service
                      tls: # the local path of TLS key
                        pem: cert/nrf.pem # NRF TLS Certificate
                        key: cert/nrf.key # NRF TLS Private key
                    DefaultPlmnId:
                      mcc: {{ MCC }} # Mobile Country Code (3 digits string, digit: 0~9)
                      mnc: {{ MNC }} # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                    serviceNameList: # the SBI services provided by this NRF, refer to TS 29.510
                      - nnrf-nfm # Nnrf_NFManagement service
                      - nnrf-disc # Nnrf_NFDiscovery service

                  logger: # log output setting
                    enable: true # true or false
                    level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
                    reportCaller: false # enable the caller report or not, value: true or false

            - name  : Remove NRF default config file - (run mode)
              shell: rm nrfcfg.yaml
              args:
                chdir: "{{ NFS_DIR_CONFIG }}"

            - name  : Build nrfcfg.yaml default config file - (run mode)
              copy:
                dest: "{{ NFS_DIR_CONFIG }}/nrfcfg.yaml"
                content: |
                  info:
                    version: 1.0.2
                    description: NRF initial local configuration

                  configuration:
                    MongoDBName: free5gc # database name in MongoDB
                    MongoDBUrl: {{ MONGO_URL_CONNECTION }} # a valid URL of the mongodb
                    sbi: # Service-based interface information
                      scheme: http # the protocol for sbi (http or https)
                      registerIPv4: {{ NRF_IP_ADDRESS }} # IP used to serve NFs or register to another NRF
                      bindingIPv4: {{ NRF_IP_ADDRESS }}  # IP used to bind the service
                      port: {{ NRF_PORT }} # port used to bind the service
                      tls: # the local path of TLS key
                        pem: cert/nrf.pem # NRF TLS Certificate
                        key: cert/nrf.key # NRF TLS Private key
                    DefaultPlmnId:
                      mcc: {{ MCC }} # Mobile Country Code (3 digits string, digit: 0~9)
                      mnc: {{ MNC }} # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                    serviceNameList: # the SBI services provided by this NRF, refer to TS 29.510
                      - nnrf-nfm # Nnrf_NFManagement service
                      - nnrf-disc # Nnrf_NFDiscovery service

                  logger: # log output setting
                    enable: true # true or false
                    level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
                    reportCaller: false # enable the caller report or not, value: true or false
              
            - name  : Create UDR config dir
              shell : |
                mkdir config
                mkdir cert
              args:
                chdir: "{{ UDR_DIR }}"

            - name  : Copy UDR cert's 1/2
              shell: cp {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/cert/udr.pem {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/NFs/udr/cert/udr.pem

            - name  : Copy UDR cert's 2/2
              shell: cp {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/cert/udr.key {{ GO_SRC_DIR }}/{{ FREE5GC_CHECKOUT_FOLDER_NAME }}/NFs/udr/cert/udr.key

            - name  : Build udrcfg.yaml config file
              copy:
                dest: "{{ UDR_DIR }}/config/udrcfg.yaml"
                content: |
                  info:
                    version: 1.0.2
                    description: UDR initial local configuration

                  configuration:
                    sbi: # Service-based interface information
                      scheme: http # the protocol for sbi (http or https)
                      registerIPv4: {{ UDR_IP_ADDRESS }} # IP used to register to NRF
                      bindingIPv4: {{ UDR_IP_ADDRESS }}  # IP used to bind the service
                      port: {{ UDR_PORT }} # port used to bind the service
                      tls: # the local path of TLS key
                        pem: cert/udr.pem # UDR TLS Certificate
                        key: cert/udr.key # UDR TLS Private key
                    mongodb:
                      name: free5gc # Database name in MongoDB
                      url: {{ MONGO_URL_CONNECTION }} # URL of MongoDB
                    nrfUri: http://{{ NRF_IP_ADDRESS }}:{{ NRF_PORT }} # a valid URI of NRF

                  logger: # log output setting
                    enable: true # true or false
                    level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
                    reportCaller: false # enable the caller report or not, value: true or false

            - name  : Remove UDR default config file - (run mode)
              shell: rm udrcfg.yaml
              args:
                chdir: "{{ NFS_DIR_CONFIG }}"                  
              
            - name: Build udrcfg.yaml default config file - (run mode)
              copy:
                dest: "{{ NFS_DIR_CONFIG }}/udrcfg.yaml"
                content: |
                  info:
                    version: 1.0.2
                    description: UDR initial local configuration

                  configuration:
                    sbi: # Service-based interface information
                      scheme: http # the protocol for sbi (http or https)
                      registerIPv4: {{ UDR_IP_ADDRESS }} # IP used to register to NRF
                      bindingIPv4: {{ UDR_IP_ADDRESS }}  # IP used to bind the service
                      port: {{ UDR_PORT }} # port used to bind the service
                      tls: # the local path of TLS key
                        pem: cert/udr.pem # UDR TLS Certificate
                        key: cert/udr.key # UDR TLS Private key
                    mongodb:
                      name: free5gc # Database name in MongoDB
                      url: {{ MONGO_URL_CONNECTION }} # URL of MongoDB
                    nrfUri: http://{{ NRF_IP_ADDRESS }}:{{ NRF_PORT }} # a valid URI of NRF

                  logger: # log output setting
                    enable: true # true or false
                    level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
                    reportCaller: false # enable the caller report or not, value: true or false
             
