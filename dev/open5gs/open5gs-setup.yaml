---
    -   hosts: open5gs
        become: yes
        remote_user: root
        vars:
            ROOT_SRC_DIR : "/root"
            HOME_DIR: "/root"
            SYSTEM_MD_DIR: "/etc/systemd/system"
            OPEN5GS_CHECKOUT_FOLDER_NAME: "/root/open5gs"
            OPEN5GS_GIT_CHECKOUT_URL: "https://github.com/open5gs/open5gs.git"
            
        tasks:

            - name: Upgrade all apt packages
              apt: upgrade=dist force_apt_get=yes

            - name: Install Basic requirements - Open5GS
              apt:
                    name: ['mongodb', 'build-essential', 'git', 'cmake', 'libsctp-dev', 'libssl-dev', 'libgnutls28-dev', 'libidn11-dev', 'meson', 'ninja-build', 'libtalloc-dev', 'libyaml-dev', 'libmicrohttpd-dev', 'flex', 'bison', 'libnghttp2-dev', 'libcurl4-openssl-dev', 'libmongoc-1.0-0', 'libmongoc-dev']
                    state: present
                    update_cache: yes

#            - name: Running ==> sudo systemctl start mongodb
#              become: yes
#              become_method: sudo
#              become_user: root
#              command:  sudo systemctl start mongodb

#            - name: Running ==> sudo systemctl enable mongodb
#              shell:  sudo systemctl enable mongodb

#            - name  : Remove Open5GS old dir if exist
#              shell : rm -rf {{ OPEN5GS_CHECKOUT_FOLDER_NAME }}
#              args:
#                chdir: "{{ ROOT_SRC_DIR }}"
#              ignore_errors: true

#            - name  : Clone Open5GS
#              shell : git clone {{ OPEN5GS_GIT_CHECKOUT_URL }} {{ OPEN5GS_CHECKOUT_FOLDER_NAME }}
#              args:
#                chdir: "{{ ROOT_SRC_DIR }}"

#            - name: Running ==> meson build --prefix=`pwd`/install 
#              shell: meson build --prefix=`pwd`/install
#              args:
#                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

#            - name: Running ==>  ninja -C build
#              shell: ninja -C build
#              args:
#                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

#            - name: Running ==>  ninja -C build install
#              shell: ninja -C build install
#              args:
#                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

#            - name: Running ==>  sudo cp -r install/etc/open5gs /etc/
#              shell: sudo cp -r install/etc/open5gs /etc/
#              args:
#                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==> rm open5gs-nrfd.service
              shell: rm open5gs-nrfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-nrfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-nrfd.service"
                content: |
                  [Unit]
                  Description=Open5GS NRF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-nrfd -c /etc/open5gs/nrf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Reload systemd manager configuration
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl daemon-reload

            - name: Running ==> systemctl start open5gs-nrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-nrfd

            - name: Running ==> systemctl enable open5gs-nrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-nrfd
