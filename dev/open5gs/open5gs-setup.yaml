---
    -   hosts: open5gs
        become: yes
        remote_user: root
        vars:
            ROOT_SRC_DIR : "/root"
            HOME_DIR: "/root"
            SYSTEM_MD_DIR: "/etc/systemd/system"
            OPEN5GS_CHECKOUT_FOLDER_NAME: "/root/open5gs"
            OPEN5GS_GIT_CHECKOUT_URL: "https://github.com/open5gs/open5gs.git"
            
        tasks:

            - name: Upgrade all apt packages
              apt: upgrade=dist force_apt_get=yes

            - name: Install Basic requirements - Open5GS
              apt:
                    name: ['mongodb', 'build-essential', 'git', 'cmake', 'libsctp-dev', 'libssl-dev', 'libgnutls28-dev', 'libidn11-dev', 'meson', 'ninja-build', 'libtalloc-dev', 'libyaml-dev', 'libmicrohttpd-dev', 'flex', 'bison', 'libnghttp2-dev', 'libcurl4-openssl-dev', 'libmongoc-1.0-0', 'libmongoc-dev']
                    state: present
                    update_cache: yes

            - name: Running ==> sudo systemctl start mongodb
              become: yes
              become_method: sudo
              become_user: root
              command:  sudo systemctl start mongodb

            - name: Running ==> sudo systemctl enable mongodb
              shell:  sudo systemctl enable mongodb

            - name  : Remove Open5GS old dir if exist
              shell : rm -rf {{ OPEN5GS_CHECKOUT_FOLDER_NAME }}
              args:
                chdir: "{{ ROOT_SRC_DIR }}"
              ignore_errors: true

            - name  : Clone Open5GS
              shell : git clone {{ OPEN5GS_GIT_CHECKOUT_URL }} {{ OPEN5GS_CHECKOUT_FOLDER_NAME }}
              args:
                chdir: "{{ ROOT_SRC_DIR }}"

            - name: Running ==> meson build --prefix=`pwd`/install 
              shell: meson build --prefix=`pwd`/install
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==>  ninja -C build
              shell: ninja -C build
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==>  ninja -C build install
              shell: ninja -C build install
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==>  sudo cp -r install/etc/open5gs /etc/
              shell: sudo cp -r install/etc/open5gs /etc/
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==> rm open5gs-nrfd.service
              shell: rm open5gs-nrfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-nrfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-nrfd.service"
                content: |
                  [Unit]
                  Description=Open5GS NRF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-nrfd -c /etc/open5gs/nrf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-scpd.service
              shell: rm open5gs-scpd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-scpd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-scpd.service"
                content: |
                  [Unit]
                  Description=Open5GS SCP Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-scpd -c /etc/open5gs/scp.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-amfd.service
              shell: rm open5gs-amfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-amfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-amfd.service"
                content: |
                  [Unit]
                  Description=Open5GS AMF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-amfd -c /etc/open5gs/amf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-smfd.service
              shell: rm open5gs-smfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-smfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-smfd.service"
                content: |
                  [Unit]
                  Description=Open5GS SMF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-smfd -c /etc/open5gs/smf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-upfd.service
              shell: rm open5gs-upfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-upfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-upfd.service"
                content: |
                  [Unit]
                  Description=Open5GS UPF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-upfd -c /etc/open5gs/upf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-ausfd.service
              shell: rm open5gs-ausfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-ausfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-ausfd.service"
                content: |
                  [Unit]
                  Description=Open5GS AUSF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-ausfd -c /etc/open5gs/ausf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-udrd.service
              shell: rm open5gs-udrd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-udrd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-udrd.service"
                content: |
                  [Unit]
                  Description=Open5GS UDR Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-udrd -c /etc/open5gs/udr.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-udmd.service
              shell: rm open5gs-udmd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-udmd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-udmd.service"
                content: |
                  [Unit]
                  Description=Open5GS UDM Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-udmd -c /etc/open5gs/udm.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-pcfd.service
              shell: rm open5gs-pcfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-pcfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-pcfd.service"
                content: |
                  [Unit]
                  Description=Open5GS PCF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-pcfd -c /etc/open5gs/pcf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-bsfd.service
              shell: rm open5gs-bsfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-bsfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-bsfd.service"
                content: |
                  [Unit]
                  Description=Open5GS BSF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-bsfd -c /etc/open5gs/bsf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-hssd.service
              shell: rm open5gs-hssd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-hssd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-hssd.service"
                content: |
                  [Unit]
                  Description=Open5GS HSS Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-hssd -c /etc/open5gs/hss.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-mmed.service
              shell: rm open5gs-mmed.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-mmed.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-mmed.service"
                content: |
                  [Unit]
                  Description=Open5GS MME Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-mmed -c /etc/open5gs/mme.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-sgwcd.service
              shell: rm open5gs-mmed.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-sgwcd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-sgwcd.service"
                content: |
                  [Unit]
                  Description=Open5GS SGWC Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-sgwcd -c /etc/open5gs/sgwc.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target
                  
            - name: Running ==> rm open5gs-sgwud.service
              shell: rm open5gs-mmed.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-sgwud.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-sgwud.service"
                content: |
                  [Unit]
                  Description=Open5GS SGWU Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-sgwud -c /etc/open5gs/sgwu.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-pcrfd.service
              shell: rm open5gs-mmed.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-pcrfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-pcrfd.service"
                content: |
                  [Unit]
                  Description=Open5GS PCRF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-pcrfd -c /etc/open5gs/pcrf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target


            - name: Reload systemd manager configuration
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl daemon-reload

            - name: Running ==> systemctl start open5gs-nrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-nrfd

            - name: Running ==> systemctl enable open5gs-nrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-nrfd

            - name: Running ==> systemctl start open5gs-scpd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-scpd

            - name: Running ==> systemctl enable open5gs-scpd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-scpd

            - name: Running ==> systemctl start open5gs-amfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-amfd

            - name: Running ==> systemctl enable open5gs-amfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-amfd

            - name: Running ==> systemctl start open5gs-smfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-smfd

            - name: Running ==> systemctl enable open5gs-smfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-smfd

            - name: Running ==> systemctl start open5gs-upfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-upfd

            - name: Running ==> systemctl enable open5gs-upfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-upfd

            - name: Running ==> systemctl start open5gs-ausfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-ausfd

            - name: Running ==> systemctl enable open5gs-ausfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-ausfd

            - name: Running ==> systemctl start open5gs-udrd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-udrd

            - name: Running ==> systemctl enable open5gs-udrd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-udrd

            - name: Running ==> systemctl start open5gs-udmd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-udmd

            - name: Running ==> systemctl enable open5gs-udmd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-udmd

            - name: Running ==> systemctl start open5gs-pcfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-pcfd

            - name: Running ==> systemctl enable open5gs-pcfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-pcfd

            - name: Running ==> systemctl start open5gs-bsfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-bsfd

            - name: Running ==> systemctl enable open5gs-bsfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-bsfd

            - name: Running ==> systemctl start open5gs-hssd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-hssd

            - name: Running ==> systemctl enable open5gs-hssd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-hssd

            - name: Running ==> systemctl start open5gs-mmed
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-mmed

            - name: Running ==> systemctl enable open5gs-mmed
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-mmed

            - name: Running ==> systemctl start open5gs-sgwcd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-sgwcd

            - name: Running ==> systemctl enable open5gs-sgwcd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-sgwcd

            - name: Running ==> systemctl start open5gs-sgwud
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-sgwud

            - name: Running ==> systemctl enable open5gs-sgwud
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-sgwud
