---
    -   hosts: open5gs
        become: yes
        remote_user: root
        vars:
            ROOT_SRC_DIR : "/root"
            HOME_DIR: "/root"
            AMF_NGAP_IP_ADDRESS: "127.0.0.1"
            SYSTEM_MD_DIR: "/etc/systemd/system"
            OPEN5GS_WEBUI_CHECKOUT_FOLDER_NAME: "/root/open5gs/webui"
            OPEN5GS_CHECKOUT_FOLDER_NAME: "/root/open5gs"
            OPEN5GS_GIT_CHECKOUT_URL: "https://github.com/open5gs/open5gs.git"
            
        tasks:

            - set_fact:
                AMF_NGAP_IP_ADDRESS: "{{ ansible_default_ipv4.address }}"

            - name: Upgrade all apt packages
              apt: upgrade=dist force_apt_get=yes

            - name: Install Basic requirements - Open5GS
              apt:
                    name: ['mongodb', 'build-essential', 'git', 'cmake', 'libsctp-dev', 'libssl-dev', 'libgnutls28-dev', 'libidn11-dev', 'meson', 'ninja-build', 'libtalloc-dev', 'libyaml-dev', 'libmicrohttpd-dev', 'flex', 'bison', 'libnghttp2-dev', 'libcurl4-openssl-dev', 'libmongoc-1.0-0', 'libmongoc-dev', 'npm']
                    state: present
                    update_cache: yes

            - name: Remove NodeJS Old version
              shell :  |
                    sudo apt-get purge --auto-remove nodejs -y
                    sudo apt-get purge nodejs -y
                    sudo apt-get autoremove
              
            - name: Install NodeJS 20.x
              shell :  |
                    sudo apt -y install curl dirmngr apt-transport-https lsb-release
                    curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
                    sudo apt -y install nodejs

            - name: Update NPM to npm@10.2.0
              shell :  |
                    npm install -g npm@10.2.0

            - name: Running ==> sudo systemctl start mongodb
              become: yes
              become_method: sudo
              become_user: root
              command:  sudo systemctl start mongodb

            - name: Running ==> sudo systemctl enable mongodb
              shell:  sudo systemctl enable mongodb

            - name  : Remove Open5GS old dir if exist
              shell : rm -rf {{ OPEN5GS_CHECKOUT_FOLDER_NAME }}
              args:
                chdir: "{{ ROOT_SRC_DIR }}"
              ignore_errors: true

            - name  : Clone Open5GS
              shell : git clone {{ OPEN5GS_GIT_CHECKOUT_URL }} {{ OPEN5GS_CHECKOUT_FOLDER_NAME }}
              args:
                chdir: "{{ ROOT_SRC_DIR }}"

            - name: Running ==> meson build --prefix=`pwd`/install 
              shell: meson build --prefix=`pwd`/install
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==>  ninja -C build
              shell: ninja -C build
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==>  ninja -C build install
              shell: ninja -C build install
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            # remove arquivo padrÃ£o da amf
            - name: Running ==> rm install/etc/open5gs/amf.yaml
              shell: rm install/etc/open5gs/amf.yaml
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name  : Build custom amf.yaml
              copy:
                dest: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}/install/etc/open5gs/amf.yaml"
                content: |
                  logger:
                    file:
                      path: /root/open5gs/install/var/log/open5gs/amf.log
                  #  level: info   # fatal|error|warn|info(default)|debug|trace

                  global:
                    max:
                      ue: 1024  # The number of UE can be increased depending on memory size.
                  #    peer: 64

                  amf:
                    sbi:
                      server:
                        - address: 127.0.0.5
                          port: 7777
                      client:
                  #      nrf:
                  #        - uri: http://127.0.0.10:7777
                        scp:
                          - uri: http://127.0.0.200:7777
                    ngap:
                      server:
                        - address: {{ AMF_NGAP_IP_ADDRESS   }}
                    metrics:
                      server:
                        - address: 127.0.0.5
                          port: 9090
                    guami:
                      - plmn_id:
                          mcc: 999
                          mnc: 70
                        amf_id:
                          region: 2
                          set: 1
                    tai:
                      - plmn_id:
                          mcc: 999
                          mnc: 70
                        tac: 1
                    plmn_support:
                      - plmn_id:
                          mcc: 999
                          mnc: 70
                        s_nssai:
                          - sst: 1
                            sd: 010203  #customizado a partir da N3IWF
                    security:
                      integrity_order : [ NIA2, NIA1, NIA0 ]
                      ciphering_order : [ NEA0, NEA1, NEA2 ]
                    network_name:
                      full: Open5GS
                      short: Next
                    amf_name: open5gs-amf0
                    time:
                  #    t3502:
                  #      value: 720   # 12 minutes * 60 = 720 seconds
                      t3512:
                        value: 540    # 9 minutes * 60 = 540 seconds

                  ################################################################################
                  # SBI Server
                  ################################################################################
                  #  o Override SBI address to be advertised to NRF
                  #  sbi:
                  #    server:
                  #      - dev:eth0
                  #        advertise: open5gs-amf.svc.local
                  #
                  #  sbi:
                  #    server:
                  #      - address: localhost
                  #        advertise:
                  #          - 127.0.0.99
                  #          - ::1
                  #
                  ################################################################################
                  # SBI Client
                  ################################################################################
                  #  o Direct communication with NRF interaction
                  #  sbi:
                  #    client:
                  #      nrf:
                  #        - uri: http://127.0.0.10:7777
                  #
                  #  o Indirect communication with delegated discovery
                  #  sbi:
                  #    client:
                  #      scp:
                  #        - uri: http://127.0.0.200:7777
                  #
                  #  o Indirect communication without delegated discovery
                  #  sbi:
                  #    client:
                  #      nrf:
                  #        - uri: http://127.0.0.10:7777
                  #      scp:
                  #        - uri: http://127.0.0.200:7777
                  #  discovery:
                  #    delegated: no
                  #
                  ################################################################################
                  # HTTPS scheme with TLS
                  ################################################################################
                  #  o Set as default if not individually set
                  #  default:
                  #    tls:
                  #      server:
                  #        scheme: https
                  #        private_key: /root/open5gs/install/etc/open5gs/tls/amf.key
                  #        cert: /root/open5gs/install/etc/open5gs/tls/amf.crt
                  #      client:
                  #        scheme: https
                  #        cacert: /root/open5gs/install/etc/open5gs/tls/ca.crt
                  #  sbi:
                  #    server:
                  #      - address: amf.localdomain
                  #    client:
                  #      nrf:
                  #        - uri: https://nrf.localdomain
                  #
                  #  o Add client TLS verification
                  #  default:
                  #    tls:
                  #      server:
                  #        scheme: https
                  #        private_key: /root/open5gs/install/etc/open5gs/tls/amf.key
                  #        cert: /root/open5gs/install/etc/open5gs/tls/amf.crt
                  #        verify_client: true
                  #        verify_client_cacert: /root/open5gs/install/etc/open5gs/tls/ca.crt
                  #      client:
                  #        scheme: https
                  #        cacert: /root/open5gs/install/etc/open5gs/tls/ca.crt
                  #        client_private_key: /root/open5gs/install/etc/open5gs/tls/amf.key
                  #        client_cert: /root/open5gs/install/etc/open5gs/tls/amf.crt
                  #  sbi:
                  #    server:
                  #      - address: amf.localdomain
                  #    client:
                  #      nrf:
                  #        - uri: https://nrf.localdomain
                  #
                  ################################################################################
                  # NGAP Server
                  ################################################################################
                  #  o Listen on address available in `eth0` interface
                  #  ngap:
                  #    server:
                  #      - dev: eth0
                  #
                  ################################################################################
                  # 3GPP Specification
                  ################################################################################
                  #  o GUAMI
                  #  guami:
                  #    - plmn_id:
                  #        mcc: 999
                  #        mnc: 70
                  #      amf_id:
                  #        region: 2
                  #        set: 1
                  #        pointer: 4
                  #    - plmn_id:
                  #        mcc: 001
                  #        mnc: 01
                  #      amf_id:
                  #        region: 5
                  #        set: 2
                  #
                  #  o TAI
                  #  tai:
                  #    - plmn_id:
                  #        mcc: 001
                  #        mnc: 01
                  #      tac: [1, 3, 5]
                  #  tai:
                  #    - plmn_id:
                  #        mcc: 002
                  #        mnc: 02
                  #      tac: [6-10, 15-18]
                  #  tai:
                  #    - plmn_id:
                  #        mcc: 003
                  #        mnc: 03
                  #      tac: 20
                  #    - plmn_id:
                  #        mcc: 004
                  #        mnc: 04
                  #      tac: 21
                  #  tai:
                  #    - plmn_id:
                  #        mcc: 005
                  #        mnc: 05
                  #      tac: [22, 28]
                  #    - plmn_id:
                  #        mcc: 006
                  #        mnc: 06
                  #      tac: [30-32, 34, 36-38, 40-42, 44, 46, 48]
                  #    - plmn_id:
                  #        mcc: 007
                  #        mnc: 07
                  #      tac: 50
                  #    - plmn_id:
                  #        mcc: 008
                  #        mnc: 08
                  #      tac: 60
                  #    - plmn_id:
                  #        mcc: 009
                  #        mnc: 09
                  #      tac: [70, 80]
                  #
                  #  o PLMN Support
                  #  plmn_support:
                  #    - plmn_id:
                  #        mcc: 999
                  #        mnc: 70
                  #      s_nssai:
                  #        - sst: 1
                  #          sd: 010000
                  #    - plmn_id:
                  #        mcc: 999
                  #        mnc: 70
                  #      s_nssai:
                  #        - sst: 1
                  #
                  #  o Access Control
                  #  access_control:
                  #    - default_reject_cause: 13
                  #    - plmn_id:
                  #        reject_cause: 15
                  #        mcc: 001
                  #        mnc: 01
                  #    - plmn_id:
                  #        mcc: 002
                  #        mnc: 02
                  #    - plmn_id:
                  #        mcc: 999
                  #        mnc: 70
                  #
                  #  o Relative Capacity
                  #  relative_capacity: 100



            - name: Running ==>  sudo cp -r install/etc/open5gs /etc/
              shell: sudo cp -r install/etc/open5gs /etc/
              args:
                chdir: "{{ OPEN5GS_CHECKOUT_FOLDER_NAME }}"

            - name: Running ==> rm open5gs-nrfd.service
              shell: rm open5gs-nrfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-nrfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-nrfd.service"
                content: |
                  [Unit]
                  Description=Open5GS NRF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-nrfd -c /etc/open5gs/nrf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-scpd.service
              shell: rm open5gs-scpd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-scpd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-scpd.service"
                content: |
                  [Unit]
                  Description=Open5GS SCP Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-scpd -c /etc/open5gs/scp.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-amfd.service
              shell: rm open5gs-amfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-amfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-amfd.service"
                content: |
                  [Unit]
                  Description=Open5GS AMF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-amfd -c /etc/open5gs/amf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-smfd.service
              shell: rm open5gs-smfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-smfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-smfd.service"
                content: |
                  [Unit]
                  Description=Open5GS SMF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-smfd -c /etc/open5gs/smf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-upfd.service
              shell: rm open5gs-upfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-upfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-upfd.service"
                content: |
                  [Unit]
                  Description=Open5GS UPF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-upfd -c /etc/open5gs/upf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-ausfd.service
              shell: rm open5gs-ausfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-ausfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-ausfd.service"
                content: |
                  [Unit]
                  Description=Open5GS AUSF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-ausfd -c /etc/open5gs/ausf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-udrd.service
              shell: rm open5gs-udrd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-udrd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-udrd.service"
                content: |
                  [Unit]
                  Description=Open5GS UDR Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-udrd -c /etc/open5gs/udr.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-udmd.service
              shell: rm open5gs-udmd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-udmd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-udmd.service"
                content: |
                  [Unit]
                  Description=Open5GS UDM Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-udmd -c /etc/open5gs/udm.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-pcfd.service
              shell: rm open5gs-pcfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-pcfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-pcfd.service"
                content: |
                  [Unit]
                  Description=Open5GS PCF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-pcfd -c /etc/open5gs/pcf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-bsfd.service
              shell: rm open5gs-bsfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-bsfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-bsfd.service"
                content: |
                  [Unit]
                  Description=Open5GS BSF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-bsfd -c /etc/open5gs/bsf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-hssd.service
              shell: rm open5gs-hssd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-hssd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-hssd.service"
                content: |
                  [Unit]
                  Description=Open5GS HSS Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-hssd -c /etc/open5gs/hss.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-mmed.service
              shell: rm open5gs-mmed.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-mmed.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-mmed.service"
                content: |
                  [Unit]
                  Description=Open5GS MME Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-mmed -c /etc/open5gs/mme.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-sgwcd.service
              shell: rm open5gs-sgwcd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-sgwcd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-sgwcd.service"
                content: |
                  [Unit]
                  Description=Open5GS SGWC Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-sgwcd -c /etc/open5gs/sgwc.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target
                  
            - name: Running ==> rm open5gs-sgwud.service
              shell: rm open5gs-sgwud.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-sgwud.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-sgwud.service"
                content: |
                  [Unit]
                  Description=Open5GS SGWU Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-sgwud -c /etc/open5gs/sgwu.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target

            - name: Running ==> rm open5gs-pcrfd.service
              shell: rm open5gs-pcrfd.service
              args:
                chdir: "{{ SYSTEM_MD_DIR }}"
              ignore_errors: true

            - name  : Build open5gs-pcrfd.service
              copy:
                dest: "{{ SYSTEM_MD_DIR }}/open5gs-pcrfd.service"
                content: |
                  [Unit]
                  Description=Open5GS PCRF Daemon
                  After=network.target

                  [Service]
                  Type=simple
                  ExecStart=/root/open5gs/install/bin/open5gs-pcrfd -c /etc/open5gs/pcrf.yaml
                  Restart=on-failure
                  RestartSec=5
                  User=root
                  Group=root

                  [Install]
                  WantedBy=multi-user.target


            - name: Reload systemd manager configuration
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl daemon-reload

            - name: Running ==> systemctl start open5gs-nrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-nrfd

            - name: Running ==> systemctl enable open5gs-nrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-nrfd

            - name: Running ==> systemctl start open5gs-scpd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-scpd

            - name: Running ==> systemctl enable open5gs-scpd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-scpd

            - name: Running ==> systemctl start open5gs-amfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-amfd

            - name: Running ==> systemctl enable open5gs-amfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-amfd

            - name: Running ==> systemctl start open5gs-smfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-smfd

            - name: Running ==> systemctl enable open5gs-smfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-smfd

            - name: Running ==> systemctl start open5gs-upfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-upfd

            - name: Running ==> systemctl enable open5gs-upfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-upfd

            - name: Running ==> systemctl start open5gs-ausfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-ausfd

            - name: Running ==> systemctl enable open5gs-ausfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-ausfd

            - name: Running ==> systemctl start open5gs-udrd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-udrd

            - name: Running ==> systemctl enable open5gs-udrd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-udrd

            - name: Running ==> systemctl start open5gs-udmd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-udmd

            - name: Running ==> systemctl enable open5gs-udmd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-udmd

            - name: Running ==> systemctl start open5gs-pcfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-pcfd

            - name: Running ==> systemctl enable open5gs-pcfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-pcfd

            - name: Running ==> systemctl start open5gs-bsfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-bsfd

            - name: Running ==> systemctl enable open5gs-bsfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-bsfd

            - name: Running ==> systemctl start open5gs-hssd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-hssd

            - name: Running ==> systemctl enable open5gs-hssd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-hssd

            - name: Running ==> systemctl start open5gs-mmed
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-mmed

            - name: Running ==> systemctl enable open5gs-mmed
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-mmed

            - name: Running ==> systemctl start open5gs-sgwcd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-sgwcd

            - name: Running ==> systemctl enable open5gs-sgwcd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-sgwcd

            - name: Running ==> systemctl start open5gs-sgwud
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-sgwud

            - name: Running ==> systemctl enable open5gs-sgwud
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-sgwud

            - name: Running ==> systemctl start open5gs-pcrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl start open5gs-pcrfd

            - name: Running ==> systemctl enable open5gs-pcrfd
              become: yes
              become_method: sudo
              become_user: root
              command: systemctl enable open5gs-pcrfd

            - name: Install WebUI Running ==> npm install
              become: yes
              become_method: sudo
              become_user: root
              command: npm install
              args:
                chdir: "{{ OPEN5GS_WEBUI_CHECKOUT_FOLDER_NAME }}"

#            - name: Build Next.JS  ==> npm install
#              become: yes
#              become_method: sudo
#              become_user: root
#              command: npm install
#              args:
#                chdir: "{{ OPEN5GS_WEBUI_CHECKOUT_FOLDER_NAME }}"
